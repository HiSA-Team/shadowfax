name: Rust build and test

on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'docs/'
      - 'scripts/'
  push:
    branches: main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'docs/'
      - 'scripts/'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    # cache dependencies
    - uses: actions/cache@v4
      id: cache
      with:
        path: |
          /tmp/apt-cache/archives/*.deb
          /tmp/qemu-10.1.1/
        key: ${{ runner.os }}-${{ hashFiles('scripts/setup.sh') }}
        restore-keys: |
          ${{ runner.os }}-

    - name: Restore apt-cache
      if: steps.cache.outputs.cache-hit == 'true'
      run: |
        sudo mkdir -p /var/cache/apt/archives
        sudo cp -r /tmp/apt-cache/archives/* /var/cache/apt/archives/ || true

        # TODO: reuse scripts/setup.sh
        sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends \
        autoconf automake autotools-dev bc bison bsdextrautils build-essential cmake curl \
        device-tree-compiler flex gawk gcc-riscv64-linux-gnu git gperf libclang-dev libelf-dev \
        libexpat-dev libgmp-dev  libmpc-dev libmpfr-dev libglib2.0-dev libslirp-dev libssl-dev libtool \
        make patchutils python3-venv python3-tomli ninja-build sudo texinfo zlib1g-dev

        sudo make -C /tmp/qemu-10.1.1 install

    - name: Download, build and install QEMU
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends \
        autoconf automake autotools-dev bc bison bsdextrautils build-essential cmake curl \
        device-tree-compiler flex gawk gcc-riscv64-linux-gnu git gperf libclang-dev libelf-dev \
        libexpat-dev libgmp-dev  libmpc-dev libmpfr-dev libglib2.0-dev libslirp-dev libssl-dev libtool \
        make patchutils python3-venv python3-tomli ninja-build sudo texinfo zlib1g-dev

        curl -fsSL https://download.qemu.org/qemu-10.1.1.tar.xz -o /tmp/qemu-10.1.1.tar.xz
        tar xvJf /tmp/qemu-10.1.1.tar.xz -C /tmp/
        cd /tmp/qemu-10.1.1 && ./configure --target-list=riscv64-softmmu
        make -C /tmp/qemu-10.1.1 -j $(nproc)
        sudo make -C /tmp/qemu-10.1.1 install

    - name: Save cache
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        # save packages
        mkdir -p /tmp/apt-cache/archives
        sudo cp -r /var/cache/apt/archives/* /tmp/apt-cache/archives/ || true
        sudo chmod -R a+r /tmp/apt-cache/archives

    - uses: mkroening/rust-toolchain-toml@main
      name: Install rust toolchain
      with: # Path to the toolchain file.
      # Default: rust-toolchain.toml
        toolchain-file: ''

    - name: Build and test
      run: |
        . environment.sh
        make build-info generate-keys test
